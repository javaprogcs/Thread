在本章中，需要掌握的知识点：
    线程组的使用；
    线程状态是如何切换的；
    SimpleDataFormat类与多线程的解决方法；
    如何对线程的异常进行处理。


  7.1   线程的状态
    线程对象在不同的运行时期存在不同的状态，调用与线程有关的方法是造成线程状态改变的主要原因，而这些状态有些是双向切换，有些是单向切换
    线程状态，线程可以处于下列状态之一：
        NEW：尚未启动

        RUNNABLE：正在java虚拟机中执行的线程

        BLOCKED：受阻塞并等待某个监视器锁多的线程

        WAITING：无限期等待另一个线程来执行某一特定操作的线程。

        TIMED_WAITING：等待另一个线程来执行取决于指定等待时间的操作。

        TERMINATED：已退出的线程

  7.2   线程组
    为了便于对某些具有相同功能的线程进行管理，可以把线程归属到某一个线程组中，线程组中既可以有线程对象，也可以有线程组，组中也可以有线程，
    这样的组织结构类似于数的形式。

  7.3   Thread.activeCount()方法的使用
    作用：将当前线程的线程组及其子组中的每一个活动线程复制到指定的数组中。

  7.6   SimpleDateFormat非线程安全
    作用：对日期进行解析与格式化
